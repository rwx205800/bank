<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yj.gyl.bank.dao.TMerchantMapper">
  <resultMap id="BaseResultMap" type="com.yj.gyl.bank.model.TMerchant">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="merchant_account" jdbcType="VARCHAR" property="merchantAccount" />
    <result column="merchant_public_key" jdbcType="VARCHAR" property="merchantPublicKey" />
    <result column="merchant_private_key" jdbcType="VARCHAR" property="merchantPrivateKey" />
    <result column="public_key" jdbcType="VARCHAR" property="publicKey" />
    <result column="channel" jdbcType="VARCHAR" property="channel" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, merchant_account, merchant_public_key, merchant_private_key, public_key, channel, 
    description, create_time, update_time
  </sql>
  <select id="selectByExample" parameterType="com.yj.gyl.bank.model.TMerchantExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_merchant
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_merchant
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from t_merchant
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.yj.gyl.bank.model.TMerchantExample">
    delete from t_merchant
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.yj.gyl.bank.model.TMerchant">
    insert into t_merchant (id, merchant_account, merchant_public_key, 
      merchant_private_key, public_key, channel, 
      description, create_time, update_time
      )
    values (#{id,jdbcType=BIGINT}, #{merchantAccount,jdbcType=VARCHAR}, #{merchantPublicKey,jdbcType=VARCHAR}, 
      #{merchantPrivateKey,jdbcType=VARCHAR}, #{publicKey,jdbcType=VARCHAR}, #{channel,jdbcType=VARCHAR}, 
      #{description,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.yj.gyl.bank.model.TMerchant">
    insert into t_merchant
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="merchantAccount != null">
        merchant_account,
      </if>
      <if test="merchantPublicKey != null">
        merchant_public_key,
      </if>
      <if test="merchantPrivateKey != null">
        merchant_private_key,
      </if>
      <if test="publicKey != null">
        public_key,
      </if>
      <if test="channel != null">
        channel,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="merchantAccount != null">
        #{merchantAccount,jdbcType=VARCHAR},
      </if>
      <if test="merchantPublicKey != null">
        #{merchantPublicKey,jdbcType=VARCHAR},
      </if>
      <if test="merchantPrivateKey != null">
        #{merchantPrivateKey,jdbcType=VARCHAR},
      </if>
      <if test="publicKey != null">
        #{publicKey,jdbcType=VARCHAR},
      </if>
      <if test="channel != null">
        #{channel,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.yj.gyl.bank.model.TMerchantExample" resultType="java.lang.Long">
    select count(*) from t_merchant
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_merchant
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.merchantAccount != null">
        merchant_account = #{record.merchantAccount,jdbcType=VARCHAR},
      </if>
      <if test="record.merchantPublicKey != null">
        merchant_public_key = #{record.merchantPublicKey,jdbcType=VARCHAR},
      </if>
      <if test="record.merchantPrivateKey != null">
        merchant_private_key = #{record.merchantPrivateKey,jdbcType=VARCHAR},
      </if>
      <if test="record.publicKey != null">
        public_key = #{record.publicKey,jdbcType=VARCHAR},
      </if>
      <if test="record.channel != null">
        channel = #{record.channel,jdbcType=VARCHAR},
      </if>
      <if test="record.description != null">
        description = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_merchant
    set id = #{record.id,jdbcType=BIGINT},
      merchant_account = #{record.merchantAccount,jdbcType=VARCHAR},
      merchant_public_key = #{record.merchantPublicKey,jdbcType=VARCHAR},
      merchant_private_key = #{record.merchantPrivateKey,jdbcType=VARCHAR},
      public_key = #{record.publicKey,jdbcType=VARCHAR},
      channel = #{record.channel,jdbcType=VARCHAR},
      description = #{record.description,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.yj.gyl.bank.model.TMerchant">
    update t_merchant
    <set>
      <if test="merchantAccount != null">
        merchant_account = #{merchantAccount,jdbcType=VARCHAR},
      </if>
      <if test="merchantPublicKey != null">
        merchant_public_key = #{merchantPublicKey,jdbcType=VARCHAR},
      </if>
      <if test="merchantPrivateKey != null">
        merchant_private_key = #{merchantPrivateKey,jdbcType=VARCHAR},
      </if>
      <if test="publicKey != null">
        public_key = #{publicKey,jdbcType=VARCHAR},
      </if>
      <if test="channel != null">
        channel = #{channel,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yj.gyl.bank.model.TMerchant">
    update t_merchant
    set merchant_account = #{merchantAccount,jdbcType=VARCHAR},
      merchant_public_key = #{merchantPublicKey,jdbcType=VARCHAR},
      merchant_private_key = #{merchantPrivateKey,jdbcType=VARCHAR},
      public_key = #{publicKey,jdbcType=VARCHAR},
      channel = #{channel,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>